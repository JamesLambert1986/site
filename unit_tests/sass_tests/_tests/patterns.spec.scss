/*#region pattern-dimensions*/
@include describe('pattern-dimensions [Mixin]') {
  @include it('pattern-dimensions returns the correct dimensions including at the different breakpoints') {
    // Assert the expected results
    @include assert {
      @include output {

        @include pattern-dimensions();
      }
      @include expect {
        
        height: 10rem;
        width: 50rem;
        stroke-width: 32px;
        
        @media (min-width: 36em) {

          height: 15rem;
          width: 75rem;
        }
        
        @media (min-width: 62em) {

          height: 20rem;
          width: 100rem;
        }
      }
    }
    @include assert {
      @include output {

        @include pattern-dimensions(0.33);
      }
      @include expect {
        
        height: 3.3rem;
        width: 16.5rem;
        stroke-width: 24px;
        
        @media (min-width: 36em) {

          height: 4.95rem;
          width: 24.75rem;
        }
        
        @media (min-width: 62em) {

          height: 6.6rem;
          width: 33rem;
        }
      }
    }
    @include assert {
      @include output {

        @include pattern-dimensions(2);
      }
      @include expect {
        
        height: 20rem;
        width: 100rem;
        stroke-width: 28px;
        
        @media (min-width: 36em) {

          height: 30rem;
          width: 150rem;
        }
        
        @media (min-width: 62em) {

          height: 40rem;
          width: 200rem;
        }
      }
    }
  }
}
/*#endregion */

/*#region pattern-colour*/
@include describe('pattern-colour [Mixin]') {
  @include it('pattern-colour should update the css variable --pattern-colour') {
    // Assert the expected results
    @include assert {
      @include output {

        @include pattern-colour(--colour-primary-dark);
      }
      @include expect {
        
        --pattern-colour: var(--colour-primary-dark);
      }
    }
  }
  @include it('pattern-colour should update the svg stroke with the correct hex code when in compatible mode') {
    // Assert the expected results
    @include assert {
      @include output {

        @include pattern-colour(--colour-primary-dark,'true');
      }
      @include expect {
        
        &:not([class*="stroke-"]) .pattern__inner svg {
          stroke: #C20000 !important;
        }
      }
    }
  }
}
/*#endregion */


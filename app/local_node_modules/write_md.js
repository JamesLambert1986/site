
var fm = require('front-matter')
var marked = require('marked')
var nunjucks = require('nunjucks')

var write_md = {
  load: function (doc,locals,returnString) {

      // Check the front matter
      doc = fm(doc)
      var html = doc['body'];

      // Decalre page data array and pass through the front matter vars
      var page = new Array();
      page['page'] = doc.attributes;
  
      if(typeof locals != "undefined"){
  
        Object.keys(locals).forEach(function (key) {
          page[key] = locals[key];
        });
      }

      // Check for === bloks and turn them into containers
      // This is an extension of the marked down functionality 
      html = html.replace(/(?:===)([\s\S]*?)(?:[\n])([\s\S]*?)(?:===)/gm, function(match, p1, p2, offset, input_string){
        return "<div class='container "+p1+"'>"+marked(p2)+"</div>";
      });
  
      // Enable us to still use the nunjucks blocks func even when parsed via marked down
      html = html.replace(/{% block (.*) %}([\s\S]*?){% endblock %}/gm, function(match, p1, p2, offset, input_string){
        
        // Render the nunjucks within the block
        let block = nunjucks.renderString(p2,page);

        page['page'][p1] = block;
        return "";
      });
      
      // Create the html code and pass it through to the page data array
      html = nunjucks.renderString(html,page);
      page['page']['content'] = html;

    return page;
  },
  warning: function (warning) { 
      console.log('Warning: ' + warning);
  },
  error: function (error) { 
      console.log('Error: ' + error);
  }
};

module.exports = write_md